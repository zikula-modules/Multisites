<?php

/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @see https://modulestudio.de
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.5.0 (https://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Menu;

use Zikula\MultisitesModule\Entity\SiteEntity;
use Zikula\MultisitesModule\Entity\TemplateEntity;
use Zikula\MultisitesModule\Menu\Base\AbstractMenuBuilder;

/**
 * Menu builder implementation class.
 */
class MenuBuilder extends AbstractMenuBuilder
{
    /**
     * @var string
     */
    protected $dbalDriver;

    public function createItemActionsMenu(array $options)
    {
        $menu = parent::createItemActionsMenu($options);

        if ($entity instanceof TemplateEntity) {
            $menu->removeChild($this->__('Create projects', 'zikulamultisitesmodule'));

            $menu->addChild($this->__('Parameters CSV', 'zikulamultisitesmodule'), [
                'route' => 'zikulamultisitesmodule_template_createparameterscsvtemplate',
                'routeParameters' => ['id' => $entity->getKey()]
            ])
                ->setLinkAttribute('title', $this->__('Create a CSV file for the defined parameters', 'zikulamultisitesmodule'))
                ->setAttribute('icon', 'fa fa-file-o')
            ;

            $menu->addChild($this->__('Reapply template', 'zikulamultisitesmodule'), [
                'route' => 'zikulamultisitesmodule_template_reapply',
                'routeParameters' => ['id' => $entity->getKey()]
            ])
                ->setLinkAttribute('title', $this->__('Reapply template to all assigned sites', 'zikulamultisitesmodule'))
                ->setAttribute('icon', 'fa fa-file-o')
            ;
        } elseif ($entity instanceof SiteEntity) {
            $deleteAction = null;
            $deleteTitle = $this->__('Delete', 'zikulamultisitesmodule');
            if (isset($menu->children[$deleteTitle])) {
                $deleteAction = $menu->getChild($deleteTitle);
                $menu->removeChild($deleteTitle);
            }

            $menu->addChild($this->__('Allowed extensions', 'zikulamultisitesmodule'), [
                'route' => 'zikulamultisitesmodule_site_manageextensions',
                'routeParameters' => ['id' => $entity->getKey()]
            ])
                ->setLinkAttribute('title', $this->__('Manage the modules for this site', 'zikulamultisitesmodule'))
                ->setAttribute('icon', 'fa fa-cubes')
            ;

            $menu->addChild($this->__('Allowed layouts', 'zikulamultisitesmodule'), [
                'route' => 'zikulamultisitesmodule_site_managethemes',
                'routeParameters' => ['id' => $entity->getKey()]
            ])
                ->setLinkAttribute('title', $this->__('Manage the themes for this site', 'zikulamultisitesmodule'))
                ->setAttribute('icon', 'fa fa-paint-brush')
            ;

            // check if system() is allowed
            if (false !== strpos($this->dbalDriver, 'mysql') && $this->isFunctionAllowed('system')) {
                $menu->addChild($this->__('Database SQL Export', 'zikulamultisitesmodule'), [
                    'route' => 'zikulamultisitesmodule_site_exportdatabaseastemplate',
                    'routeParameters' => ['id' => $entity->getKey()]
                ])
                    ->setLinkAttribute('title', $this->__('Export the database as SQL file', 'zikulamultisitesmodule'))
                    ->setAttribute('icon', 'fa fa-file-o')
                ;
            }

            $menu->addChild($this->__('Site tools', 'zikulamultisitesmodule'), [
                'route' => 'zikulamultisitesmodule_site_viewtools',
                'routeParameters' => ['id' => $entity->getKey()]
            ])
                ->setAttribute('icon', 'fa fa-briefcase')
            ;

            // readd delete action
            if (null !== $deleteAction) {
                $menu->addChild($deleteAction);
            }
        }

        return $menu;
    }

    /**
     * Checks whether a certain PHP function is allowed or not.
     *
     * @param string $func Name of function
     *
     * @return boolean true if function is allowed, false otherwise
     */
    protected function isFunctionAllowed($func)
    {
        if (ini_get('safe_mode')) {
            return false;
        }
        $disabled = ini_get('disable_functions');
        if ($disabled) {
            $disabled = explode(',', $disabled);
            $disabled = array_map('trim', $disabled);

            return !in_array($func, $disabled);
        }

        return true;
    }

    /**
     * @param string $dbalDriver
     */
    public function setDbalDriver($dbalDriver)
    {
        $this->dbalDriver = $dbalDriver;
    }
}
