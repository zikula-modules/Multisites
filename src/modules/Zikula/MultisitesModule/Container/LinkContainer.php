<?php
/**
 * Multisites.
 *
 * @copyright Albert PÃ©rez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert PÃ©rez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Container;

use Zikula\MultisitesModule\Container\Base\LinkContainer as BaseLinkContainer;

use Zikula\Core\LinkContainer\LinkContainerInterface;

/**
 * This is the link container service implementation class.
 */
class LinkContainer extends BaseLinkContainer
{
    /**
     * Returns available header links.
     *
     * @param string $type The type to collect links for.
     *
     * @return array Array of header links.
     */
    public function getLinks($type = LinkContainerInterface::TYPE_ADMIN)
    {
        if (LinkContainerInterface::TYPE_ADMIN != $type) {
            return parent::getLinks($type);
        }

        $utilArgs = ['api' => 'linkContainer', 'action' => 'getLinks'];
        $allowedObjectTypes = $this->controllerHelper->getObjectTypes('api', $utilArgs);

        $permLevel = ACCESS_ADMIN;

        $links = [];

        if (in_array('project', $allowedObjectTypes)
            && $this->permissionApi->hasPermission($this->getBundleName() . ':Project:', '::', $permLevel)) {
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_project_adminview'),
                'text' => $this->translator->__('Projects'),
                'title' => $this->translator->__('Project list'),
                'icon' => 'group'
            ];
        }
        if (in_array('template', $allowedObjectTypes)
            && $this->permissionApi->hasPermission($this->getBundleName() . ':Template:', '::', $permLevel)) {
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_template_adminview'),
                'text' => $this->translator->__('Templates'),
                'title' => $this->translator->__('Template list'),
                'icon' => 'cubes'
            ];
        }
        if (in_array('site', $allowedObjectTypes)
            && $this->permissionApi->hasPermission($this->getBundleName() . ':Site:', '::', $permLevel)) {
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_site_adminview'),
                'text' => $this->translator->__('Sites'),
                'title' => $this->translator->__('Site list'),
                'icon' => 'list-alt'
            ];
        }
        if ($this->permissionApi->hasPermission($this->getBundleName() . '::', '::', $permLevel)) {
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_admin_manageUpdates'),
                'text'  => $this->__('Updates'),
                'title' => $this->__('Manage module updates'),
                'icon' => 'refresh'
            ];
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_admin_multiplyQueries'),
                'text'  => $this->__('Queries'),
                'title' => $this->__('Execute mass queries in site databases'),
                'icon' => 'database'
            ];
            $links[] = [
                'url' => $this->router->generate('zikulamultisitesmodule_admin_config'),
                'text' => $this->translator->__('Configuration'),
                'title' => $this->translator->__('Manage settings for this application'),
                'icon' => 'wrench'
            ];
        }

        return $links;

    }
}
