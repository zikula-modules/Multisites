<?php
/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.1 (http://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Menu\Base;

use Knp\Menu\FactoryInterface;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerAwareTrait;
use Zikula\Common\Translator\TranslatorTrait;
use Zikula\MultisitesModule\Entity\SiteEntity;
use Zikula\MultisitesModule\Entity\TemplateEntity;
use Zikula\MultisitesModule\Entity\SiteExtensionEntity;
use Zikula\MultisitesModule\Entity\ProjectEntity;

/**
 * This is the item actions menu implementation class.
 */
class AbstractItemActionsMenu implements ContainerAwareInterface
{
    use ContainerAwareTrait;
    use TranslatorTrait;

    /**
     * Sets the translator.
     *
     * @param TranslatorInterface $translator Translator service instance
     */
    public function setTranslator(/*TranslatorInterface */$translator)
    {
        $this->translator = $translator;
    }

    /**
     * Builds the menu.
     *
     * @param FactoryInterface $factory Menu factory
     * @param array            $options Additional options
     *
     * @return \Knp\Menu\MenuItem The assembled menu
     */
    public function menu(FactoryInterface $factory, array $options)
    {
        $menu = $factory->createItem('itemActions');
        if (!isset($options['entity']) || !isset($options['area']) || !isset($options['context'])) {
            return $menu;
        }

        $this->setTranslator($this->container->get('translator'));

        $entity = $options['entity'];
        $area = $options['area'];
        $context = $options['context'];

        $permissionApi = $this->container->get('zikula_permissions_module.api.permission');
        $currentUserApi = $this->container->get('zikula_users_module.current_user');
        $menu->setChildrenAttribute('class', 'list-inline');

        
        $currentLegacyControllerType = $area != '' ? $area : 'user';
        $currentFunc = $context;
        
        if ($entity instanceof SiteEntity) {
            $component = 'ZikulaMultisitesModule:Site:';
            $instance = $entity['id'] . '::';
        
        if ($currentLegacyControllerType == 'admin') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_site_adminedit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this site'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_site_adminedit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new site'));
                }
                if ($permissionApi->hasPermission($component, $instance, ACCESS_DELETE)) {
                    $menu->addChild($this->__('Delete'), [
                        'route' => 'zikulamultisitesmodule_site_admindelete',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-trash-o');
                    $menu[$this->__('Delete')]->setLinkAttribute('title', $this->__('Delete this site'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site extension');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_siteextension_adminedit',
                    'routeParameters' => ['site' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        if ($currentLegacyControllerType == 'user') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_site_edit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this site'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_site_edit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new site'));
                }
                if ($permissionApi->hasPermission($component, $instance, ACCESS_DELETE)) {
                    $menu->addChild($this->__('Delete'), [
                        'route' => 'zikulamultisitesmodule_site_delete',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-trash-o');
                    $menu[$this->__('Delete')]->setLinkAttribute('title', $this->__('Delete this site'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site extension');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_siteextension_edit',
                    'routeParameters' => ['site' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        }
        if ($entity instanceof TemplateEntity) {
            $component = 'ZikulaMultisitesModule:Template:';
            $instance = $entity['id'] . '::';
        
        if ($currentLegacyControllerType == 'admin') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_template_adminedit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this template'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_template_adminedit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new template'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_site_adminedit',
                    'routeParameters' => ['template' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            
                $title = $this->__('Create project');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_project_adminedit',
                    'routeParameters' => ['templates' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        if ($currentLegacyControllerType == 'user') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_template_edit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this template'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_template_edit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new template'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_site_edit',
                    'routeParameters' => ['template' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            
                $title = $this->__('Create project');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_project_edit',
                    'routeParameters' => ['templates' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        }
        if ($entity instanceof SiteExtensionEntity) {
            $component = 'ZikulaMultisitesModule:SiteExtension:';
            $instance = $entity['id'] . '::';
        
        if ($currentLegacyControllerType == 'admin') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
            }
        }
        if ($currentLegacyControllerType == 'user') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
            }
        }
        }
        if ($entity instanceof ProjectEntity) {
            $component = 'ZikulaMultisitesModule:Project:';
            $instance = $entity['id'] . '::';
        
        if ($currentLegacyControllerType == 'admin') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_project_adminedit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this project'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_project_adminedit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new project'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_site_adminedit',
                    'routeParameters' => ['project' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            
                $title = $this->__('Create template');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_template_adminedit',
                    'routeParameters' => ['projects' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        if ($currentLegacyControllerType == 'user') {
            if (in_array($currentFunc, ['index', 'view'])) {
            }
            if (in_array($currentFunc, ['index', 'view', 'display'])) {
                if ($permissionApi->hasPermission($component, $instance, ACCESS_EDIT)) {
                    $menu->addChild($this->__('Edit'), [
                        'route' => 'zikulamultisitesmodule_project_edit',
                        'routeParameters' => ['id' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-pencil-square-o');
                    $menu[$this->__('Edit')]->setLinkAttribute('title', $this->__('Edit this project'));
                    $menu->addChild($this->__('Reuse'), [
                        'route' => 'zikulamultisitesmodule_project_edit',
                        'routeParameters' => ['astemplate' => $entity['id']]
                    ])->setAttribute('icon', 'fa fa-files-o');
                    $menu[$this->__('Reuse')]->setLinkAttribute('title', $this->__('Reuse for new project'));
                }
            }
            
            // more actions for adding new related items
            $authAdmin = $permissionApi->hasPermission($component, $instance, ACCESS_ADMIN);
            
            $uid = $currentUserApi->get('uid');
            if ($authAdmin || (isset($uid) && method_exists($entity, 'getCreatedBy') && $entity->getCreatedBy()->getUid() == $uid)) {
            
                $title = $this->__('Create site');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_site_edit',
                    'routeParameters' => ['project' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            
                $title = $this->__('Create template');
                $menu->addChild($title, [
                    'route' => 'zikulamultisitesmodule_template_edit',
                    'routeParameters' => ['projects' => $entity['id']]
                ])->setAttribute('icon', 'fa fa-plus');
                $menu[$title]->setLinkAttribute('title', $title);
            }
        }
        }

        return $menu;
    }
}
