<?php
/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Helper;

use Zikula\MultisitesModule\Helper\Base\ModelHelper as BaseModelHelper;

use Exception;

/**
 * Utility implementation class for model helper methods.
 */
class ModelHelper extends BaseModelHelper
{
    /**
     * Determines whether creating an instance of a certain object type is possible.
     * This is when
     *     - no tree is used
     *     - it has no incoming bidirectional non-nullable relationships.
     *     - the edit type of all those relationships has PASSIVE_EDIT and auto completion is used on the target side
     *       (then a new source object can be created while creating the target object).
     *     - corresponding source objects exist already in the system.
     *
     * Note that even creation of a certain object is possible, it may still be forbidden for the current user
     * if he does not have the required permission level.
     *
     * @param string $objectType Name of treated entity type.
     *
     * @return boolean Whether a new instance can be created or not.
     *
     * @throws Exception If an invalid object type is used.
     */
    public function canBeCreated($objectType)
    {
        $controllerHelper = $this->container->get('zikulamultisitesmodule.controller_helper');
        if (!in_array($objectType, $controllerHelper->getObjectTypes('util', ['util' => 'model', 'action' => 'canBeCreated']))) {
            throw new \Exception('Error! Invalid object type received.');
        }
    
        $result = false;
    
        switch ($objectType) {
            case 'site':
                $result = $this->hasExistingInstances('project') && $this->hasExistingInstances('template');
                break;
            case 'template':
                $result = $this->hasExistingInstances('project');
                break;
            case 'siteExtension':
                $result = true;
                break;
            case 'project':
                $result = true;
                break;
        }
    
        return $result;
    }
}
