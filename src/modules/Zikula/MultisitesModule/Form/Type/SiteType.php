<?php
/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Form\Type;

use Zikula\MultisitesModule\Form\Type\Base\SiteType as BaseSiteType;

use Symfony\Component\Form\FormBuilderInterface;

/**
 * Site editing form type implementation class.
 */
class SiteType extends BaseSiteType
{
    /**
     * Adds basic entity fields.
     *
     * @param FormBuilderInterface The form builder.
     * @param array                The options.
     */
    public function addEntityFields(FormBuilderInterface $builder, array $options)
    {
        $builder->add('name', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Name') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the name of the site')
            ],
            'required' => true,
            'max_length' => 150,
        ]);
        $builder->add('description', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Description') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the description of the site')
            ],
            'required' => false,
            'max_length' => 255,
        ]);
        $builder->add('siteAlias', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site alias') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site alias of the site')
            ],
            'required' => true,
            'max_length' => 80,
        ]);
        $builder->add('siteName', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site name') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site name of the site')
            ],
            'required' => true,
            'max_length' => 150,
        ]);
        $builder->add('siteDescription', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site description') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site description of the site')
            ],
            'required' => false,
            'max_length' => 255,
        ]);
        $builder->add('siteAdminName', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site admin name') . ':',
            'empty_data' => 'admin',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site admin name of the site')
            ],
            'required' => true,
            'max_length' => 25,
        ]);
        $builder->add('siteAdminPassword', 'Symfony\Component\Form\Extension\Core\Type\PasswordType', [
            'label' => $this->__('Site admin password') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site admin password of the site')
            ],
            'required' => true,
            'max_length' => 15,
        ]);
        $builder->add('siteAdminRealName', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site admin real name') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site admin real name of the site')
            ],
            'required' => false,
            'max_length' => 70,
        ]);
        $builder->add('siteAdminEmail', 'Symfony\Component\Form\Extension\Core\Type\EmailType', [
            'label' => $this->__('Site admin email') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => ' validate-email',
                'title' => $this->__('Enter the site admin email of the site')
            ],
            'required' => true,
            'max_length' => 40
        ]);
        $builder->add('siteCompany', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site company') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site company of the site')
            ],
            'required' => false,
            'max_length' => 100,
        ]);
        $builder->add('siteDns', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Site dns') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the site dns of the site')
            ],
            'required' => true,
            'max_length' => 255,
        ]);
        $builder->add('databaseName', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Database name') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the database name of the site')
            ],
            'required' => true,
            'max_length' => 50,
        ]);
        $builder->add('databaseUserName', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Database user name') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the database user name of the site')
            ],
            'required' => true,
            'max_length' => 50,
        ]);
        $builder->add('databasePassword', 'Symfony\Component\Form\Extension\Core\Type\PasswordType', [
            'label' => $this->__('Database password') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the database password of the site')
            ],
            'required' => true,
            'max_length' => 50,
        ]);
        $builder->add('databaseHost', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
            'label' => $this->__('Database host') . ':',
            'empty_data' => 'localhost',
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the database host of the site')
            ],
            'required' => true,
            'max_length' => 50,
        ]);
        $builder->add('databaseType', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
            'label' => $this->__('Database type') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => '',
                'title' => $this->__('Choose the database type of the site')
            ],
            'required' => true,
            'placeholder' => '',
            'choices' => [
                $this->__('MySQL') => 'mysql',
                $this->__('MySQL Improved') => 'mysqli',
                $this->__('PostgreSQL') => 'postgres',
                //$this->__('Oracle') => 'oci'
            ]
            'choices_as_values' => true
            'multiple' => false,
            'expanded' => false
        ]);
        $builder->add('logo', 'Symfony\Component\Form\Extension\Core\Type\FileType', [
            'label' => $this->__('Logo') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => ' validate-upload',
                'title' => $this->__('Enter the logo of the site')
            ],
            'required' => false,
            'file_meta' => 'getLogoMeta',
            'file_path' => 'getLogoFullPath',
            'file_url' => 'getLogoFullPathUrl',
            'allowed_extensions' => 'gif, jpeg, jpg, png',
            'allowed_size' => 0
        ]);
        $builder->add('favIcon', 'Symfony\Component\Form\Extension\Core\Type\FileType', [
            'label' => $this->__('Fav icon') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => ' validate-upload',
                'title' => $this->__('Enter the fav icon of the site')
            ],
            'required' => false,
            'file_meta' => 'getFavIconMeta',
            'file_path' => 'getFavIconFullPath',
            'file_url' => 'getFavIconFullPathUrl',
            'allowed_extensions' => 'png, ico',
            'allowed_size' => 0
        ]);
        $builder->add('parametersCsvFile', 'Symfony\Component\Form\Extension\Core\Type\FileType', [
            'label' => $this->__('Parameters csv file') . ':',
            'empty_data' => '',
            'attr' => [
                'class' => ' validate-upload',
                'title' => $this->__('Enter the parameters csv file of the site')
            ],
            'required' => false,
            'file_meta' => 'getParametersCsvFileMeta',
            'file_path' => 'getParametersCsvFileFullPath',
            'file_url' => 'getParametersCsvFileFullPathUrl',
            'allowed_extensions' => 'csv',
            'allowed_size' => 0
        ]);
        $builder->add('active', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
            'label' => $this->__('Active') . ':',
            'empty_data' => 'false',
            'attr' => [
                'class' => '',
                'title' => $this->__('active ?')
            ],
            'required' => false,
        ]);
        $builder->add('allowedLocales', 'Zikula\MultisitesModule\Form\Type\Field\ArrayType', [
            'label' => $this->__('Allowed locales') . ':',
            'empty_data' => [],
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter the allowed locales of the site')
            ],
            'required' => false,
            'help' => [
                $this->__('Expert option! Per default all locales available in the system will be made available for the site.'),
                $this->__('This feature has not been implemented yet (issue #17).')
            ]
        ]);
        $builder->add('parametersArray', 'Zikula\MultisitesModule\Form\Type\Field\ArrayType', [
            'label' => $this->__('or enter them manually'),
            'empty_data' => [],
            'attr' => [
                'class' => '',
                'title' => $this->__('Enter values for the template parameters')
            ],
            'required' => false,
            'help' => [
                '<a id="deriveParametersFromTemplate" href="javascript:void(0);" class="hidden" style="clear:left;">' . $this->__('Derive placeholders from template') . '</a>',
                $this->__('Enter values for all parameters specified by the selected template separated by line breaks.')
            ]
        ]);
    }
}
