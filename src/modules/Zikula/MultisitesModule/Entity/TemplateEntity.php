<?php
/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.1 (http://modulestudio.de).
 */

namespace Zikula\MultisitesModule\Entity;

use Zikula\MultisitesModule\Entity\Base\AbstractTemplateEntity as BaseEntity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Gedmo\Mapping\Annotation as Gedmo;
use DoctrineExtensions\StandardFields\Mapping\Annotation as ZK;
use Symfony\Component\Validator\Constraints as Assert;
use ModUtil;

/**
 * Entity class that defines the entity structure and behaviours.
 *
 * This is the concrete entity class for template entities.
 * @ORM\Entity(repositoryClass="\Zikula\MultisitesModule\Entity\Repository\TemplateRepository")
 * @ORM\Table(name="zikula_multisites_template",
 *     indexes={
 *         @ORM\Index(name="workflowstateindex", columns={"workflowState"})
 *     }
 * )
 */
class TemplateEntity extends BaseEntity
{
    /**
     * Checks whether the sql file is referenced by any other template.
     *
     * @return boolean True if a reference has been found, false otherwise
     */
    public function isSqlFileReferencedByOtherTemplates()
    {
        $fileNeeded = false;
        $templates = ModUtil::apiFunc('ZikulaMultisitesModule', 'selection', 'getEntities', ['ot' => 'template']);
        foreach ($templates as $template) {
            if ($this->id == $template['id']) {
                continue;
            }
            if ($this->sqlFile != $template['sqlFile']) {
                continue;
            }
            $fileNeeded = true;
            break;
        }

        return $fileNeeded;
    }

    /**
     * Clone interceptor implementation.
     * This method is for example called by the reuse functionality.
     * Performs a quite simple shallow copy.
     *
     * See also:
     * (1) http://docs.doctrine-project.org/en/latest/cookbook/implementing-wakeup-or-clone.html
     * (2) http://www.php.net/manual/en/language.oop5.cloning.php
     * (3) http://stackoverflow.com/questions/185934/how-do-i-create-a-copy-of-an-object-in-php
     */
    public function __clone()
    {
        // If the entity has an identity, proceed as normal.
        if ($this->id) {
            // unset identifiers
            $this->setId(0);

            // reset Workflow
            $this->resetWorkflow();
    
            // reset upload fields
            //$this->setSqlFile('');
            //$this->setSqlFileMeta([]);
    
            $this->setCreatedDate(null);
            $this->setCreatedUserId(null);
            $this->setUpdatedDate(null);
            $this->setUpdatedUserId(null);
        }
        // otherwise do nothing, do NOT throw an exception!
    }
}
