{# purpose of this template: build the form to edit an instance of template #}
{% extends routeArea == 'admin' ? 'ZikulaMultisitesModule::adminBase.html.twig' : 'ZikulaMultisitesModule::base.html.twig' %}

{% block header %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@ZikulaMultisitesModule:js/ZikulaMultisitesModule.EditFunctions.js')) }}
    {{ pageAddAsset('javascript', zasset('@ZikulaMultisitesModule:js/ZikulaMultisitesModule.Validation.js')) }}
    {{ pageAddAsset('javascript', 'web/typeahead.js/dist/typeahead.bundle.min.js') }}
{% endblock %}

{% block title mode == 'create' ? __('Create template') : __('Edit template') %}
{% block admin_page_icon mode == 'create' ? 'plus' : 'pencil-square-o' %}
{% block content %}
    <div class="zikulamultisitesmodule-template zikulamultisitesmodule-edit">
{% form_theme form with [
    '@ZikulaMultisitesModule/Form/bootstrap_3.html.twig',
    'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
] %}
{{ form_start(form, {attr: {id: 'templateEditForm'}}) }}
{{ form_errors(form) }}
<fieldset>
    <legend>{{ __('Content') }}</legend>
    
    {{ form_row(form.name) }}
    
    {{ form_row(form.description) }}
</fieldset>
<fieldset>
    <legend>{{ __('Template data') }}</legend>

    {{ form_row(form.sqlFile) }}
    {{ form_row(form.sqlFileSelected) }}
</fieldset>

{{ include(
    '@ZikulaMultisitesModule/Project/includeSelectMany.html.twig',
    { group: 'template', alias: 'projects', aliasReverse: 'templates', mandatory: false, idPrefix: 'multisitesTemplate_Projects', linkingItem: template, displayMode: 'choices', allowEditing: false }
) }}

<fieldset>
    <legend>{{ __('Advanced options') }}</legend>

    {{ form_row(form.folders, {help: __('Enter the folders to be created for new sites separated by line breaks. If you need a folder within another one you can write expressions like "folder/folder".')}) }}

    {{ form_row(form.excludedTables, {help: __('Enter the names of database tables which should be skipped during template reapplications separated by line breaks. With this you can for example avoid overriding your local user table. Note you can use * as a placeholder, like content_* for all Content tables for only * for all tables; ensure to use this if you want to use a template for different sites without any parameters, otherwise you will end up with overriding your data later on when the template is reapplied.')}) }}

    {{ form_row(form.parameters, {help: [__('Enter parameter names separated by line breaks. Each parameter represents a variable information which is being replaced by concrete values when creating a new site or reapplying the template on existing sites. The parameter names can be used as placeholders anywhere in the template data accordingly.'), __('Placeholder syntax: ###PARAMETERNAME###')]}) }}
</fieldset>

{% if mode != 'create' %}
    {{ include('@ZikulaMultisitesModule/Helper/includeStandardFieldsEdit.html.twig', { obj: template }) }}
{% endif %}

{# include display hooks #}
{% if mode != 'create' %}
    {% set hookId = template.id %}
    {% set hooks = notifyDisplayHooks(eventName='zikulamultisitesmodule.ui_hooks.templates.form_edit', id=hookId) %}
{% else %}
    {% set hooks = notifyDisplayHooks(eventName='zikulamultisitesmodule.ui_hooks.templates.form_edit', id=null) %}
{% endif %}
{% if hooks is iterable and hooks|length > 0 %}
    {% for providerArea, hook in hooks %}
        {% if providerArea != 'provider.scribite.ui_hooks.editor' %}{# fix for #664 #}
            <fieldset>
                {{ hook }}
            </fieldset>
        {% endif %}
    {% endfor %}
{% endif %}


{# include return control #}
{% if mode == 'create' %}
    <fieldset>
        <legend>{{ __('Return control') }}</legend>
        {{ form_row(form.repeatCreation) }}
    </fieldset>
{% endif %}

{# include possible submit actions #}
<div class="form-group form-buttons">
    <div class="col-sm-offset-3 col-sm-9">
        {% for action in actions %}
            {{ form_widget(attribute(form, action.id), {attr: {class: action.buttonClass}, icon: action.id == 'delete' ? 'fa-trash-o' : ''}) }}
        {% endfor %}
        {{ form_widget(form.reset, {attr: {class: 'btn btn-default', formnovalidate: 'formnovalidate'}, icon: 'fa-refresh'}) }}
        {{ form_widget(form.cancel, {attr: {class: 'btn btn-default', formnovalidate: 'formnovalidate'}, icon: 'fa-times'}) }}
    </div>
</div>
{{ form_end(form) }}
</div>
{% endblock %}
{% block footer %}
    {{ parent() }}

    % set editImage = '<span class="fa fa-pencil-square-o"></span>' %}
    % set deleteImage = '<span class="fa fa-trash-o"></span>' %}
    
    
    <script type="text/javascript">
    /* <![CDATA[ */
        
                var formButtons;
        
                function executeCustomValidationConstraints()
                {
                    zikulaMultisitesPerformCustomValidationRules('template', '{% if mode != 'create' %}{{ template.id }}{% endif %}');
                }
        
                function triggerFormValidation()
                {
                    executeCustomValidationConstraints();
                    if (!document.getElementById('templateEditForm').checkValidity()) {
                        // This does not really submit the form,
                        // but causes the browser to display the error message
                        jQuery('#templateEditForm').find(':submit').not(jQuery('#btnDelete')).first().click();
                    }
                }
        
                function handleFormSubmit (event) {
                    triggerFormValidation();
                    if (!document.getElementById('templateEditForm').checkValidity()) {
                        event.preventDefault();
                        return false;
                    }
        
                    // hide form buttons to prevent double submits by accident
                    formButtons.each(function (index) {
                        jQuery(this).addClass('hidden');
                    });
        
                    return true;
                }
        
                ( function($) {
                    $(document).ready(function() {
        
                        var allFormFields = $('#templateEditForm input, #templateEditForm select, #templateEditForm textarea');
                        allFormFields.change(executeCustomValidationConstraints);
        
                        formButtons = $('#templateEditForm .form-buttons input');
                        $('#btnDelete').bind('click keypress', function (e) {
                            if (!window.confirm('{{ __('Really delete this template? This includes deletion of assigned parameters and sites, too!') }}')) {
                                e.preventDefault();
                            }
                        });
                        $('#templateEditForm').submit(handleFormSubmit);
        
                        {% if mode != 'create' %}
                            triggerFormValidation();
                        {% endif %}
        
                        $('#templateEditForm label').tooltip();
                        zikulaMultisitesInitUploadField('sqlFile');

                        $('#parameters').keyup(function() {
                            $(this).val($(this).val().toUpperCase();
                        });
                    });
                })(jQuery);
    /* ]]> */
    </script>
{% endblock %}
