<?php
/**
 * Multisites.
 *
 * @copyright Albert Pérez Monfort (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Albert Pérez Monfort <aperezm@xtec.cat>.
 * @link http://modulestudio.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.0.1 (http://modulestudio.de).
 */

use Symfony\Component\EventDispatcher\EventSubscriberInterface;
use Zikula\ThemeModule\Bridge\Event\TwigPostRenderEvent;
use Zikula\ThemeModule\ThemeEvents;

/**
 * This event handler cares for replacing parameter placeholders by concrete values.
 */
class Multisites_EventHandlers_ReplaceParameters implements EventSubscriberInterface
{
    /**
     * Makes our handlers known to the event system.
     */
    public static function getSubscribedEvents()
    {
        return [
            ThemeEvents::POST_RENDER => ['postRender', 5]
        ];
    }

    /**
     * Listener for the `theme.post_render` event.
     *
     * Occurs immediately after twig theme engine renders a template.
     * The event subject is \Zikula\ThemeModule\Bridge\Event\TwigPostRenderEvent.
     *
     * An example for implementing this event is \Zikula\ThemeModule\EventListener\TemplateNameExposeListener.
     *
     * @param TwigPostRenderEvent $event The event instance
     */
    public function postRender(TwigPostRenderEvent $event)
    {
        // replace parameter placeholders by concrete values
        // TODO legacy call
        $parameters = ModUtil::getVar('Multisites');
        if (count($parameters) < 1) {
            return;
        }

        // TODO consider @Theme("admin") annotations, too -> check route name
        if (FormUtil::getPassedValue('type', 'user') == 'admin') {
            return;
        }

        $delimiter = '###';
        $output = $event->getContent();

        foreach ($parameters as $paramName => $paramValue) {
            if (false === strpos($paramName, 'parameterValue')) {
                // normal modvar
                continue;
            }

            $placeholder = $delimiter . strtoupper(str_replace('parameterValue', '', $paramName)) . $delimiter;
            $output = str_replace($placeholder, $paramValue, $output);
        }

        $event->setContent($output);
    }
}
